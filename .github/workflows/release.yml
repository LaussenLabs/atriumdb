name: atriumdb_SDK_Release
'on':
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: Release Version
        required: true
        type: string
      pypiReleaseFeed:
        description: PyPI Release Feed
        required: true
        type: choice
        options:
        - test.pypi
        - pypi
        default: test.pypi
        
jobs:
  build-release:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y tzdata cmake build-essential gdb libzstd-dev liblz4-dev python3.10 mingw-w64
        pip install build
    - name: Build C libraries
      run: |
        cd tsc-lib
        cmake -Bcmake-build-release -DCMAKE_TOOLCHAIN_FILE=windows-TC-mingw.cmake -DCMAKE_BUILD_TYPE='Release'
        cmake --build cmake-build-release --target Block
        mkdir -p ../sdk/bin
        cp cmake-build-release/src/Block/libTSC.dll ../sdk/bin/libTSC.dll
        rm -rf cmake-build-release/**
        cmake -Bcmake-build-release -H. -DCMAKE_BUILD_TYPE='Release'
        cmake --build cmake-build-release --target Block
        cp cmake-build-release/src/Block/libTSC.so ../sdk/bin/libTSC.so
        cd ..
    - name: Build SDK package
      run: cd sdk && python -m build
    
    - name: Upload distributions
      uses: actions/upload-artifact@v4
      with:
        name: release-dists
        path: |
            sdk/dist/*.whl
            sdk/dist/*.gz
            sdk/bin/*.dll
            sdk/bin/*.so'
        
    # - name: Create GitHub Release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     tag_name: ${{ github.event.inputs.releaseVersion }}
    #     name: ${{ github.event.inputs.releaseVersion }}
    #     files: |
    #       sdk/dist/*.whl
    #       sdk/dist/*.gz
    #       sdk/bin/*.dll
    #       sdk/bin/*.so'
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  # pypi-publish:
  #   name: Publish to pypi
  #   if: startsWith(github.ref, 'refs/tags/') # only publish to PyPI on tag pushes
  #   needs:
  #     - build-release
  #   runs-on: ubuntu-20.04
  #   permissions:
  #     # IMPORTANT: this permission is mandatory for trusted publishing
  #     id-token: write

  #   # Dedicated environments with protections for publishing are strongly recommended.
  #   # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
  #   environment:
  #     name: ${{ github.event.inputs.pypiReleaseFeed }}
  #     # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
  #     # ALTERNATIVE: exactly, uncomment the following line instead:
  #     url: https://${{ github.event.inputs.pypiReleaseFeed }}.org/project/atriumdb/${{ github.event.release.name }}

  #   steps:
  #     - name: Retrieve release distributions
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release-dists
  #         path: sdk/dist/*.whl

  #     - name: Publish release distributions to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         name: release-dists
  #         path: sdk/dist/*.whl
          
