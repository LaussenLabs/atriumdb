
trigger:
  branches:
    include:
    - '*'

pr:
  branches:
    include:
      - '*'

pool:
  vmImage: ubuntu-latest

variables:
- group: atriumdb-release
- name: build_date
  value: format('{0:yyyyMMdd}',pipeline.startTime)


jobs:
  - job: initiate
    displayName: initiate
    continueOnError: false
    steps:
      - checkout: self
        clean: true
        fetchDepth: 0
        fetchTags: true
        persistCredentials: true
        displayName: run_commands
      - bash: | 
          git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
          git fetch origin
          git remote add repoGithub https://$(GITHUB_PAT)@github.com/LaussenLabs/atriumdb.git
          git fetch repoGithub
          git push --prune repoGithub +refs/remotes/origin/*:refs/heads/* +refs/tags/*:refs/tags/*
  
  - job: run_build_dev
    displayName: Run build dev
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.10'
    - bash: |
        sudo apt-get update && sudo apt-get install -y tzdata cmake build-essential gdb libzstd-dev liblz4-dev python3.10 mingw-w64
        pip install build
        pip install twine
      displayName: Setup build environment

    - bash: |
        cd tsc-lib
        cmake -Bcmake-build-release -DCMAKE_TOOLCHAIN_FILE=windows-TC-mingw.cmake -DCMAKE_BUILD_TYPE='Release';
        cmake --build cmake-build-release --target Block;
        mkdir ../sdk/bin
        cp cmake-build-release/src/Block/libTSC.dll ../sdk/bin/libTSC.dll;
        rm -rf cmake-build-release/**;
        cmake -Bcmake-build-release -H. -DCMAKE_BUILD_TYPE='Release';
        cmake --build cmake-build-release --target Block;
        cp cmake-build-release/src/Block/libTSC.so ../sdk/bin/libTSC.so;
        cd ..
      displayName: Build C libraries

    - bash: |
        cd sdk
        python -m build
      displayName: Build SDK package

    - bash: |
        VERSION=$(grep -Po '(?<=version = ")[^"]*' sdk/pyproject.toml)
        DATE=$(date '+%Y%m%d')
        COMMIT=$(Build.SourceVersion)
        mv sdk/dist/atriumdb-*.whl sdk/dist/atriumdb-${VERSION}.${DATE}.${COMMIT}-py3-none-any.whl

    - task: TwineAuthenticate@1
      inputs:
        artifactFeed: 'Physiological Data System/adb-py-internal'
    - bash: |
          python -m twine upload --skip-existing -r adb-py-internal --config-file $(PYPIRC_PATH) sdk/dist/*.whl
      displayName: Upload build artifacts
